**※ 도메인 객체 : 해당 도메인 주소에서 사용되는 관련 정보들을 모아놓은 객체**

### 목적

- 사용자 정보를 post 요청으로 보내기

### V1(MemberApiController)
- 과정
    - 사용자가 api/v1/members로 post 요청을 보냈다. (JSON)
    - JSON 정보는 member 객체의 변수와 매칭되어 저장된다(값이 없는 변수는 모두 NULL)
    - 해당 member를 저장한다.
- 문제점
    - 도메인 객체를 파라미터로 쓰고있다.
        - 도메인 객체는 정말 많은 클래스에서 사용된다.
        - 도메인 클래스의 정보가 수정될 시, 파라미터로 넣은 도메인 객체가 에러가 날 확률이 크다.
        - 또한, post 요청을 받지 못한 클래스의 변수들은 NULL 처리 된다.
        - 따라서, 개발자 입장에서 어느 변수의 값을 받고자 member 객체를 넣었는지 판단하기 어렵다.

### V2(MemberApiController2)
- 도메인 객체를 파라미터로 넣지 않는 방법
    - 단계
        - 해당 클래스 내에 내부 클래스를 만든다
        - 내부 클래스에서 post 요청을 받고자 하는 변수명을 표시한다.
        - 해당 변수명에 해당하는 post 요청을 받아들인다
