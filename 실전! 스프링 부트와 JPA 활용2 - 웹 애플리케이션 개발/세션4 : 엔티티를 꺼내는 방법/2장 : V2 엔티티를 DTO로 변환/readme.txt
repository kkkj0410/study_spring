### 1. DTO
- 의미
    - 값을 전달하는 것만 담당하는 객체
- 쓰는 이유
    - 엔티티가 수정되더라도 해당 클래스에 반영되지 않게 하기 위함
    - 엔티티를 그대로 가져다 쓰게되면 값이 더 추가 되거나 없어지는 경우가 생김
    - 하지만 DTO를 통해 해당 클래스에서 원하는 데이터를 정확히 표기할 시, 해당 데이터가 없어서 오류가 생길지언정, 출력이 이상하게 변환되지 않는다.


### 2. V2 문제점
- N+1 문제 발생
    - 리스트 객체를 가져왔다고 하자.
    - 해당 리스트의 각 객체마다 프록시를 가질 경우, 각 프록시를 가져오기 위해 또 테이블을 조회해야한다
    - ⇒1번의 리스트 조회인데, 각 객체마다 N번의 테이블 조회가 또 일어남.
