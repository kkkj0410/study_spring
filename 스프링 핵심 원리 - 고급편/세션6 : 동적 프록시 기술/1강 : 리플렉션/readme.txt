### <요약>

- 이전 강의에서는 프록시를 만들기 위해서 수많은 코드를 작성해야했다
    - 인터페이스 프록시, 상속받는 프록시 등
- 리플렉션은 직접 프록시를 하나하나 만들필요없이, 하나의 프록시로 만들 수 있다.
- 리플렉션
    - 의미
        - 프로그램의 각 함수를 런타임 시점에서 호출
            - 각 클래스나, 함수를 Class, Method라는 타입으로 호출 가능
              Class classHello = Class.forName("hello.advanced.jdkdynamic.ReflectionTest$Hello");
              Hello function = new Hello();
              Method method = classHello.getMethod("callA");

- 적용(리플렉션)
    - 리플렉션으로 각 함수를 호출한다
    - 리플렉션으로 호출된 각 함수는 Method라는 공통된 타입을 가진다.
    - 따라서 Method이름으로 프로그램 전체 함수를 호출한다.
    - 그리고 그 위 아래로 로그 추적기를 달면 하나의 프록시로 모든 추적이 가능하다


- 하지만 리플렉션을 쓰면 안된다
    - 문제
        - 클래스와 함수를 String 문자열로 호출
        - 리플렉션은 런타임 시점에서 호출
        - ⇒ 문자열을 잘못 적으면 런타임 시점에서 오류 발생
            - (배포를 끝마치고 사용자가 사용하는 단계에서 오류가 발생)
